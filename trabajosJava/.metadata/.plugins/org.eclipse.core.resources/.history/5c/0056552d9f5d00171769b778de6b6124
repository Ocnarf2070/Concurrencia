package prFuture;

import java.awt.font.NumericShaper;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
 
public class PrincipalCallable {
	public static FutureTask<Double> numero =new FutureTask<>(new Callable<Double>() {

		@Override
		public Double call() throws Exception {
			// TODO Auto-generated method stub
			return Math.random();
		}
		
	});
 
    public static void main(String[] args) {
         
         
        try {
            ExecutorService servicio= Executors.newCachedThreadPool();
            double res=0;
            for(int i=0;i<5;i++){
            	
            servicio.execute(numero);
            res+=numero.get();
            System.out.println(numero.get()+" "+res);
            }
        } catch (InterruptedException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (ExecutionException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
         
         
 
    }
 
}